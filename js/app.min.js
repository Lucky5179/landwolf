(() => {
  "use strict";
  const e = {};
  function t() {
    if (location.hash) return location.hash.replace("#", "");
  }
  let o = !0,
    n = (e = 500) => {
      if (o) {
        const t = document.querySelectorAll("[data-lp]");
        setTimeout(() => {
          t.forEach((e) => {
            e.style.paddingRight = "";
          }),
            (document.body.style.paddingRight = ""),
            document.documentElement.classList.remove("lock");
        }, e),
          (o = !1),
          setTimeout(function () {
            o = !0;
          }, e);
      }
    },
    r = (e = 500) => {
      if (o) {
        const t = document.querySelectorAll("[data-lp]"),
          n = window.innerWidth - document.body.offsetWidth + "px";
        t.forEach((e) => {
          e.style.paddingRight = n;
        }),
          (document.body.style.paddingRight = n),
          document.documentElement.classList.add("lock"),
          (o = !1),
          setTimeout(function () {
            o = !0;
          }, e);
      }
    };
  function s() {
    n(), document.documentElement.classList.remove("menu-open");
  }
  function a(e) {
    setTimeout(() => {
      window.FLS && console.log(e);
    }, 0);
  }
  function c(e) {
    return e.filter(function (e, t, o) {
      return o.indexOf(e) === t;
    });
  }
  e.watcher = new (class {
    constructor(e) {
      (this.config = Object.assign({ logging: !0 }, e)),
        this.observer,
        !document.documentElement.classList.contains("watcher") &&
          this.scrollWatcherRun();
    }
    scrollWatcherUpdate() {
      this.scrollWatcherRun();
    }
    scrollWatcherRun() {
      document.documentElement.classList.add("watcher"),
        this.scrollWatcherConstructor(
          document.querySelectorAll("[data-watch]")
        );
    }
    scrollWatcherConstructor(e) {
      if (e.length) {
        this.scrollWatcherLogging(
          `Прокинувся, стежу за об'єктами (${e.length})...`
        ),
          c(
            Array.from(e).map(function (e) {
              if (
                "navigator" === e.dataset.watch &&
                !e.dataset.watchThreshold
              ) {
                let t;
                e.clientHeight > 2
                  ? ((t = window.innerHeight / 2 / (e.clientHeight - 1)),
                    t > 1 && (t = 1))
                  : (t = 1),
                  e.setAttribute("data-watch-threshold", t.toFixed(2));
              }
              return `${
                e.dataset.watchRoot ? e.dataset.watchRoot : null
              }|${e.dataset.watchMargin ? e.dataset.watchMargin : "0px"}|${e.dataset.watchThreshold ? e.dataset.watchThreshold : 0}`;
            })
          ).forEach((t) => {
            let o = t.split("|"),
              n = { root: o[0], margin: o[1], threshold: o[2] },
              r = Array.from(e).filter(function (e) {
                let t = e.dataset.watchRoot ? e.dataset.watchRoot : null,
                  o = e.dataset.watchMargin ? e.dataset.watchMargin : "0px",
                  r = e.dataset.watchThreshold ? e.dataset.watchThreshold : 0;
                if (
                  String(t) === n.root &&
                  String(o) === n.margin &&
                  String(r) === n.threshold
                )
                  return e;
              }),
              s = this.getScrollWatcherConfig(n);
            this.scrollWatcherInit(r, s);
          });
      } else
        this.scrollWatcherLogging("Сплю, немає об'єктів для стеження. ZzzZZzz");
    }
    getScrollWatcherConfig(e) {
      let t = {};
      if (
        (document.querySelector(e.root)
          ? (t.root = document.querySelector(e.root))
          : "null" !== e.root &&
            this.scrollWatcherLogging(
              `Эмм... батьківського об'єкта ${e.root} немає на сторінці`
            ),
        (t.rootMargin = e.margin),
        !(e.margin.indexOf("px") < 0 && e.margin.indexOf("%") < 0))
      ) {
        if ("prx" === e.threshold) {
          e.threshold = [];
          for (let t = 0; t <= 1; t += 0.005) e.threshold.push(t);
        } else e.threshold = e.threshold.split(",");
        return (t.threshold = e.threshold), t;
      }
      this.scrollWatcherLogging(
        "йой, налаштування data-watch-margin потрібно задавати в PX або %"
      );
    }
    scrollWatcherCreate(e) {
      console.log(e),
        (this.observer = new IntersectionObserver((e, t) => {
          e.forEach((e) => {
            this.scrollWatcherCallback(e, t);
          });
        }, e));
    }
    scrollWatcherInit(e, t) {
      this.scrollWatcherCreate(t), e.forEach((e) => this.observer.observe(e));
    }
    scrollWatcherIntersecting(e, t) {
      e.isIntersecting
        ? (!t.classList.contains("_watcher-view") &&
            t.classList.add("_watcher-view"),
          this.scrollWatcherLogging(
            `Я бачу ${t.classList}, додав клас _watcher-view`
          ))
        : (t.classList.contains("_watcher-view") &&
            t.classList.remove("_watcher-view"),
          this.scrollWatcherLogging(
            `Я не бачу ${t.classList}, прибрав клас _watcher-view`
          ));
    }
    scrollWatcherOff(e, t) {
      t.unobserve(e),
        this.scrollWatcherLogging(`Я перестав стежити за ${e.classList}`);
    }
    scrollWatcherLogging(e) {
      this.config.logging && a(`[Спостерігач]: ${e}`);
    }
    scrollWatcherCallback(e, t) {
      const o = e.target;
      this.scrollWatcherIntersecting(e, o),
        o.hasAttribute("data-watch-once") &&
          e.isIntersecting &&
          this.scrollWatcherOff(o, t),
        document.dispatchEvent(
          new CustomEvent("watcherCallback", { detail: { entry: e } })
        );
    }
  })({});
  let l = (e, t = !1, o = 500, n = 0) => {
      const r = document.querySelector(e);
      if (r) {
        let c = "",
          l = 0;
        if (t) {
          c = "header.header";
          const e = document.querySelector(c);
          e.classList.contains("_header-scroll")
            ? (l = e.offsetHeight)
            : ((e.style.cssText = "transition-duration: 0s;"),
              e.classList.add("_header-scroll"),
              (l = e.offsetHeight),
              e.classList.remove("_header-scroll"),
              setTimeout(() => {
                e.style.cssText = "";
              }, 0));
        }
        let i = {
          speedAsDuration: !0,
          speed: o,
          header: c,
          offset: n,
          easing: "easeOutQuad",
        };
        if (
          (document.documentElement.classList.contains("menu-open") && s(),
          "undefined" != typeof SmoothScroll)
        )
          new SmoothScroll().animateScroll(r, "", i);
        else {
          let e = r.getBoundingClientRect().top + scrollY;
          (e = l ? e - l : e),
            (e = n ? e - n : e),
            window.scrollTo({ top: e, behavior: "smooth" });
        }
        a(`[gotoBlock]: Юхуу...їдемо до ${e}`);
      } else a(`[gotoBlock]: Йой... Такого блоку немає на сторінці: ${e}`);
    },
    i = !1;
  setTimeout(() => {
    if (i) {
      let e = new Event("windowScroll");
      window.addEventListener("scroll", function (t) {
        document.dispatchEvent(e);
      });
    }
  }, 0);
  new (class {
    constructor(e) {
      this.type = e;
    }
    init() {
      (this.оbjects = []),
        (this.daClassname = "_dynamic_adapt_"),
        (this.nodes = [...document.querySelectorAll("[data-da]")]),
        this.nodes.forEach((e) => {
          const t = e.dataset.da.trim().split(","),
            o = {};
          (o.element = e),
            (o.parent = e.parentNode),
            (o.destination = document.querySelector(`${t[0].trim()}`)),
            (o.breakpoint = t[1] ? t[1].trim() : "767.98"),
            (o.place = t[2] ? t[2].trim() : "last"),
            (o.index = this.indexInParent(o.parent, o.element)),
            this.оbjects.push(o);
        }),
        this.arraySort(this.оbjects),
        (this.mediaQueries = this.оbjects
          .map(({ breakpoint: e }) => `(${this.type}-width: ${e / 16}em),${e}`)
          .filter((e, t, o) => o.indexOf(e) === t)),
        this.mediaQueries.forEach((e) => {
          const t = e.split(","),
            o = window.matchMedia(t[0]),
            n = t[1],
            r = this.оbjects.filter(({ breakpoint: e }) => e === n);
          o.addEventListener("change", () => {
            this.mediaHandler(o, r);
          }),
            this.mediaHandler(o, r);
        });
    }
    mediaHandler(e, t) {
      e.matches
        ? t.forEach((e) => {
            this.moveTo(e.place, e.element, e.destination);
          })
        : t.forEach(({ parent: e, element: t, index: o }) => {
            t.classList.contains(this.daClassname) && this.moveBack(e, t, o);
          });
    }
    moveTo(e, t, o) {
      t.classList.add(this.daClassname),
        "last" === e || e >= o.children.length
          ? o.append(t)
          : "first" !== e
          ? o.children[e].before(t)
          : o.prepend(t);
    }
    moveBack(e, t, o) {
      t.classList.remove(this.daClassname),
        void 0 !== e.children[o] ? e.children[o].before(t) : e.append(t);
    }
    indexInParent(e, t) {
      return [...e.children].indexOf(t);
    }
    arraySort(e) {
      "min" === this.type
        ? e.sort((e, t) =>
            e.breakpoint === t.breakpoint
              ? e.place === t.place
                ? 0
                : "first" === e.place || "last" === t.place
                ? -1
                : "last" === e.place || "first" === t.place
                ? 1
                : 0
              : e.breakpoint - t.breakpoint
          )
        : e.sort((e, t) =>
            e.breakpoint === t.breakpoint
              ? e.place === t.place
                ? 0
                : "first" === e.place || "last" === t.place
                ? 1
                : "last" === e.place || "first" === t.place
                ? -1
                : 0
              : t.breakpoint - e.breakpoint
          );
    }
  })("max").init();
  const d = document.querySelectorAll(".pl-func"),
    u = document.querySelectorAll(".pr-func");
  let m;
  function h() {
    (m = window.innerWidth < 1830 ? 15 : (window.innerWidth - 1800) / 2),
      d.length &&
        d.forEach((e) => {
          e.style.paddingLeft = m + "px";
        }),
      u.length &&
        u.forEach((e) => {
          e.style.paddingRight = m + "px";
        });
  }
  h(), (document.body.onresize = h);
  const f = document.querySelector(".hero__decor-layer2 img");
  let g = null;
  requestAnimationFrame(function e(t) {
    g || (g = t);
    const o = (t - g) / 24e3,
      n = 2 * o * Math.PI,
      r = 2 * Math.cos(n),
      s = 2 * Math.sin(n);
    (f.style.transform = `translate(${-r}rem, ${s}rem)`),
      o < 1 || (g = null),
      requestAnimationFrame(e);
  });
  const w = document.querySelector(".hero"),
    y = document.querySelector(".hero__bg"),
    p = document.querySelector(".hero__decor-layer1"),
    _ = document.querySelector(".hero__decor-layer2"),
    v = document.querySelector(".hero__decor-layer3"),
    S = document.querySelector(".hero__decor-layer4"),
    b = document.querySelector(".hero__decor-layer5"),
    L = document.querySelector(".hero__title"),
    q = document.querySelector(".hero__actions"),
    E = document.querySelector(".hero__main-image"),
    $ = document.querySelector(".hero__labels"),
    k = document.querySelector(".hero__content");
  let x = w.offsetHeight,
    W = 0;
  const H = [
    { element: y, factor: 0.45 },
    { element: p, factor: 0.5 },
    { element: _, factor: 0.7 },
    { element: L, factor: 0.9 },
    { element: q, factor: 0.9 },
    { element: v, factor: 1.25 },
    { element: S, factor: 1.1 },
    { element: b, factor: 1.6 },
    { element: E, factor: 1.4 },
    { element: $, factor: 2 },
    { element: k, factor: 2.6 },
  ];
  function C() {
    const e = Math.min(W / (x + 3 * window.innerHeight), 1);
    H.forEach(({ element: t, factor: o }) => {
      const n = (e * x) / o;
      t.style.transform = `translateY(${n}px)`;
    });
  }
  H.forEach(({ element: e }) => {
    e.style.willChange = "transform";
  });
  const Y = document.querySelector(".how");
  let T;
  (T =
    window.innerWidth > 767.98
      ? [
          { element: document.querySelector(".how__sun"), start: 0 },
          { element: document.querySelector(".how__cloud-back"), start: 60 },
          { element: document.querySelector(".how__title"), start: 120 },
          { element: document.querySelector(".how__clouds-front"), start: 180 },
          { element: document.querySelector(".how__main-back"), start: 240 },
          { element: document.querySelector(".how__main-mid"), start: 300 },
          { element: document.querySelector(".how__main-wolf"), start: 360 },
          { element: document.querySelector(".how__main-front"), start: 420 },
        ]
      : [
          { element: document.querySelector(".how__sun"), start: 0 },
          { element: document.querySelector(".how__cloud-back"), start: 20 },
          { element: document.querySelector(".how__title"), start: 40 },
          { element: document.querySelector(".how__clouds-front"), start: 60 },
          { element: document.querySelector(".how__main-back"), start: 90 },
          { element: document.querySelector(".how__main-mid"), start: 120 },
          { element: document.querySelector(".how__main-wolf"), start: 160 },
          { element: document.querySelector(".how__main-front"), start: 200 },
        ]),
    T.forEach(({ element: e, start: t }) => {
      e && (e.style.transform = `translateY(${t}vh)`);
    });
  let R = window.innerHeight;
  function A() {
    const e = Y.getBoundingClientRect(),
      t = e.top - R,
      o = e.bottom,
      n = Math.min(Math.max(0, (R - t) / (0.85 * (o - t))), 1);
    n >= 0.9
      ? document.querySelector(".how__labels").classList.add("active")
      : document.querySelector(".how__labels").classList.remove("active"),
      (function (e) {
        T.forEach(({ element: t, start: o }) => {
          const n = o - e * o;
          t && (t.style.transform = `translateY(${n}vh)`);
        });
      })(n);
  }
  function I() {
    R = window.innerHeight;
  }
  window.addEventListener("scroll", A), window.addEventListener("resize", I);
  const B = document.querySelector(".about"),
    M = document.querySelector(".about__box"),
    O = document.querySelector(".about__box-city"),
    X = document.querySelector(".about__box-mid"),
    j = document.querySelector(".about__box-wall"),
    z = document.querySelector(".about__box-road"),
    F = document.querySelector(".about__box-content-box");
  let P, Q, Z;
  function D() {
    (P = B.offsetHeight), (Q = M.offsetHeight), (Z = window.innerHeight);
  }
  let N = 0;
  function U() {
    if (0 === N) {
      const e = document.querySelector(".about__box-hero img");
      let t = 0;
      const o = setInterval(() => {
        t < 60
          ? (t++, e.setAttribute("src", `img/about/wolf/${t}-min.png`))
          : clearInterval(o);
      }, 30);
      (N = 1),
        setTimeout(() => {
          N = 0;
        }, 4e3);
    }
  }
  function G() {
    U();
    const e = B.getBoundingClientRect(),
      t = (M.getBoundingClientRect(), e.top + window.scrollY),
      o = t + P - Z,
      n = window.scrollY;
    if (n >= t && n <= o) {
      const e = (n - t) / (o - t);
      (O.style.transform = `translateX(${-1.8 * e}%)`),
        (X.style.transform = `translateX(${-4 * e}%)`),
        (j.style.transform = `translateX(${-20 * e}%)`),
        (z.style.transform = `translateX(${-40 * e}%)`),
        (F.style.transform =
          100 * e < 30
            ? `translateY(${-100 * e * 2.9}%)`
            : 100 * e < 70
            ? "translateY(-87%)"
            : `translateY(${(((-100 * e * 1.243 * e) / 0.7) * e) / 0.7}%)`),
        100 * e > 80 &&
          (document.querySelector(
            ".tokenomics__bg"
          ).style.transform = `translateY(${-50 * (e - 0.8)}%)`),
        100 * e < 26 ? F.classList.remove("show") : F.classList.add("show");
    } else
      n < t &&
        ((O.style.transform = "translateX(0%)"),
        (X.style.transform = "translateX(0%)"),
        (j.style.transform = "translateX(0%)"),
        (z.style.transform = "translateX(0%)"),
        (F.style.transform = "translateY(0%)"));
  }
  setInterval(U, 4e3);
  const J = document.querySelector(".tokenomics__body-box"),
    K = document.querySelector(".tokenomics__body"),
    V = document.querySelector(".tokenomics");
  let ee, te, oe;
  function ne() {
    const e = J.getBoundingClientRect(),
      t = (M.getBoundingClientRect(), e.top + window.scrollY),
      o = t + P - Z,
      n = window.scrollY;
    if (n >= t && n <= o) {
      const e = (n - t) / (o - t);
      100 * e > 1 ? V.classList.add("v1") : V.classList.remove("v1"),
        100 * e > 15 ? V.classList.add("v15") : V.classList.remove("v15"),
        100 * e > 30 ? V.classList.add("v30") : V.classList.remove("v30"),
        100 * e > 45 ? V.classList.add("v45") : V.classList.remove("v45"),
        100 * e > 60 ? V.classList.add("v60") : V.classList.remove("v60"),
        100 * e > 75 ? V.classList.add("v75") : V.classList.remove("v75"),
        100 * e > 90 ? V.classList.add("v90") : V.classList.remove("v90"),
        100 * e > 99 ? V.classList.add("v99") : V.classList.remove("v99");
    }
  }
  function re() {
    (ee = J.offsetHeight),
      (te = K.offsetHeight),
      (oe = window.innerHeight),
      ne();
  }
  const se = document.querySelector(".join__bg-im1"),
    ae = document.querySelector(".join__bg-im2"),
    ce = document.querySelector(".gallery");
  let le;
  (le = window.innerWidth > 767.98 ? 60 : 25),
    window.addEventListener("scroll", function () {
      (W = window.scrollY),
        W <= x + 3 * window.innerHeight && requestAnimationFrame(C),
        A(),
        G(),
        ne(),
        (function () {
          const e = ce.getBoundingClientRect(),
            t = window.innerHeight;
          if (
            (window.innerHeight,
            window.scrollY,
            window.innerHeight,
            e.bottom <= t && e.bottom >= t - window.innerHeight / 2)
          ) {
            const o = (-(t - e.bottom) / (window.innerHeight / 2)) * le;
            (se.style.transform = `translateY(${o}vh)`),
              (ae.style.transform = `translateY(${o}vh) scaleY(-1)`);
          } else
            e.bottom > t
              ? ((se.style.transform = "translateY(0vh)"),
                (ae.style.transform = "translateY(0vh) scaleY(-1)"))
              : e.bottom < t - window.innerHeight / 2 &&
                ((se.style.transform = `translateY(-${le}vh)`),
                (ae.style.transform = `translateY(-${le}vh) scaleY(-1)`));
        })();
    }),
    window.addEventListener("resize", function () {
      (x = w.offsetHeight), I(), D(), G(), re();
    }),
    D(),
    G(),
    document.addEventListener("click", async function (e) {
      if (e.target.closest(".copy-ca-btn"))
        try {
          const e = document.getElementById("ca-value").textContent.trim();
          await navigator.clipboard.writeText(e),
            alert("Address copied successfully");
        } catch (e) {
          console.error("Error copying address:", e),
            alert("Failed to copy address. Please try again.");
        }
    }),
    (window.FLS = !1),
    document.documentElement.classList.contains("loading") ||
      window.addEventListener("load", function () {
        setTimeout(function () {
          document.documentElement.classList.add("loaded");
        }, 0);
      }),
    document.querySelector(".icon-menu") &&
      document.addEventListener("click", function (e) {
        o &&
          e.target.closest(".icon-menu") &&
          (((e = 500) => {
            document.documentElement.classList.contains("lock") ? n(e) : r(e);
          })(),
          document.documentElement.classList.toggle("menu-open"));
      }),
    (function () {
      function o(t) {
        if ("click" === t.type) {
          const o = t.target;
          if (o.closest("[data-goto]")) {
            const n = o.closest("[data-goto]"),
              r = n.dataset.goto ? n.dataset.goto : "",
              a = !!n.hasAttribute("data-goto-header"),
              c = n.dataset.gotoSpeed ? n.dataset.gotoSpeed : 500,
              i = n.dataset.gotoTop ? parseInt(n.dataset.gotoTop) : 0;
            if (e.fullpage) {
              const t = document
                  .querySelector(`${r}`)
                  .closest("[data-fp-section]"),
                o = t ? +t.dataset.fpId : null;
              null !== o &&
                (e.fullpage.switchingSection(o),
                document.documentElement.classList.contains("menu-open") &&
                  s());
            } else l(r, a, c, i);
            t.preventDefault();
          }
        } else if ("watcherCallback" === t.type && t.detail) {
          const e = t.detail.entry,
            o = e.target;
          if ("navigator" === o.dataset.watch) {
            document.querySelector("[data-goto]._navigator-active");
            let t;
            if (o.id && document.querySelector(`[data-goto="#${o.id}"]`))
              t = document.querySelector(`[data-goto="#${o.id}"]`);
            else if (o.classList.length)
              for (let e = 0; e < o.classList.length; e++) {
                const n = o.classList[e];
                if (document.querySelector(`[data-goto=".${n}"]`)) {
                  t = document.querySelector(`[data-goto=".${n}"]`);
                  break;
                }
              }
            e.isIntersecting
              ? t && t.classList.add("_navigator-active")
              : t && t.classList.remove("_navigator-active");
          }
        }
      }
      if (
        (document.addEventListener("click", o),
        document.addEventListener("watcherCallback", o),
        t())
      ) {
        let e;
        document.querySelector(`#${t()}`)
          ? (e = `#${t()}`)
          : document.querySelector(`.${t()}`) && (e = `.${t()}`),
          e && l(e, !0, 500, 20);
      }
    })();
})();
